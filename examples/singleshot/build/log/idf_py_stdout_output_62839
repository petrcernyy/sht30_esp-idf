[1/10] Performing build step for 'bootloader'
[1/1] cd /home/petr/esp/sht30_library/examples/singleshot/build/bootloader/esp-idf/esptool_py && /home/petr/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/petr/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/petr/esp/sht30_library/examples/singleshot/build/bootloader/bootloader.bin
Bootloader binary size 0x5600 bytes. 0x1a00 bytes (23%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/home/petr/esp/sht30_library/component/sht30.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable singleshot.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.dev4
Creating esp32s2 image...
Merged 2 ELF sections
Successfully created esp32s2 image.
Generated /home/petr/esp/sht30_library/examples/singleshot/build/singleshot.bin
[9/10] cd /home/petr/esp/sht30_library/examples/singleshot/build/esp-idf/esptool_py && /home/petr/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/petr/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/petr/esp/sht30_library/examples/singleshot/build/partition_table/partition-table.bin /home/petr/esp/sht30_library/examples/singleshot/build/singleshot.bin
singleshot.bin binary size 0x2fea0 bytes. Smallest app partition is 0x100000 bytes. 0xd0160 bytes (81%) free.
[9/10] cd /home/petr/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/petr/esp/esp-idf -D "SERIAL_TOOL=/home/petr/.espressif/python_env/idf5.3_py3.10_env/bin/python;;/home/petr/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s2" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/petr/esp/sht30_library/examples/singleshot/build -P /home/petr/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s2 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 singleshot.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev4
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-S2FH4 (revision v0.0)
Features: WiFi, Embedded Flash 4MB, No Embedded PSRAM, ADC and temperature sensor calibration in BLK2 of efuse V1
Crystal is 40MHz
MAC: 7c:df:a1:99:97:d0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00006fff...
Flash will be erased from 0x00010000 to 0x0003ffff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 22016 bytes to 13505...
Writing at 0x00001000... (100 %)
Wrote 22016 bytes (13505 compressed) at 0x00001000 in 0.6 seconds (effective 280.7 kbit/s)...
Hash of data verified.
Compressed 196256 bytes to 104476...
Writing at 0x00010000... (14 %)
Writing at 0x0001c3d2... (28 %)
Writing at 0x00022166... (42 %)
Writing at 0x0002830e... (57 %)
Writing at 0x0002e12e... (71 %)
Writing at 0x000372d9... (85 %)
Writing at 0x0003d906... (100 %)
Wrote 196256 bytes (104476 compressed) at 0x00010000 in 2.6 seconds (effective 612.2 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 493.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
